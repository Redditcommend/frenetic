{"name":"Frenetic","tagline":"","body":"The languages used to program networks today lack modern features. Programming them is a complicated and error-prone task, and outages and infiltrations are frequent. We believe it is time to develop **network programming languages** with the following essential features:\r\n\r\n* **High-level abstractions** that give programmers direct control over the network, allowing them to specify what they want the network to do without worrying about how to implement it.\r\n* **Modular constructs** that facilitate compositional reasoning about programs.\r\n* **Portability**, allowing programs written for one platform to be reused with different devices.\r\n* **Rigorous semantic foundations** that precisely document the meaning of the language and provide a solid platform for mechanical program analysis tools.\r\n\r\nThe Frenetic language addresses these challenges in the context of [OpenFlow](http://www.openflow.org) networks. It combines a streaming declarative query sub-language and a functional reactive sub-language that, together, provide many of the features listed above. Our prototype implementation handles many low-level packet-processing details and keeps traffic in the \"fast path\" whenever possible.\r\n\r\nGetting Started\r\n---------------\r\n\r\nCheck out our [README](https://github.com/frenetic-lang/frenetic/blob/master/README.md) for instructions on building the project.\r\n\r\n### Tutorials\r\n\r\nWe have developed several guides for getting up to speed on programming OpenFlow networks in general and using Frenetic in particular.  See the [Frenetic Tutorial](wiki/Frenetic-Tutorial) launch page for more details.\r\n\r\n### Manual\r\n\r\nThe Frenetic language is primarily documented in the [Frenetic Manual](wiki/A-NCManual).\r\n\r\n### API Documentation\r\n\r\nThe [API documentation](docs/index.html) is also available online.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}