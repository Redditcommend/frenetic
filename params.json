{"name":"Frenetic","tagline":"","body":"The languages used to program networks today lack modern features. Programming them is a complicated and error-prone task, and outages and infiltrations are frequent. We believe it is time to develop **network programming languages** with the following essential features:\r\n\r\n* **High-level abstractions** that give programmers direct control over the network, allowing them to specify what they want the network to do without worrying about how to implement it.\r\n* **Modular constructs** that facilitate compositional reasoning about programs.\r\n* **Portability**, allowing programs written for one platform to be reused with different devices.\r\n* **Rigorous semantic foundations** that precisely document the meaning of the language and provide a solid platform for mechanical program analysis tools.\r\n\r\nThe Frenetic language addresses these challenges in the context of [OpenFlow](http://www.openflow.org) networks. It combines a streaming declarative query sub-language and a functional reactive sub-language that, together, provide many of the features listed above. Our prototype implementation handles many low-level packet-processing details and keeps traffic in the \"fast path\" whenever possible.\r\n\r\nGetting Started\r\n---------------\r\n\r\nCheck out our [README](https://github.com/frenetic-lang/frenetic/blob/master/README.md) for instructions on building the project.\r\n\r\nWe have developed several guides for getting up to speed on programming OpenFlow networks in general and using Frenetic in particular:\r\n\r\n* **[Ox](https://github.com/frenetic-lang/frenetic/blob/master/guide/Ox-tutorial.md)**.  This guide provides a high-level overview of software defined networking as well as an introduction to the OpenFlow protocol using Ox, an OCaml-based controller platform for controlling an OpenFlow-enabled network by sending and receiving OpenFlow messages directly.\r\n\r\n* **[Frenetic](https://github.com/frenetic-lang/frenetic/blob/master/guide/NetCore-tutorial.md)**.  This guide introduces the design principles of the Frenetic language along with the nuts and bolts of using Frenetic to control an OpenFlow-enabled network.\r\n\r\nFor readers unfamiliar with programming software defined networks, we recommend starting with the Ox tutorial before progressing to the Frenetic tutorial.\r\n\r\nThe Frenetic language is primarily documented in the [Frenetic Manual](https://github.com/frenetic-lang/frenetic/blob/master/guide/manual.md).  The [API documentation](http://htmlpreview.github.com/?https://github.com/frenetic-lang/frenetic/tree/master/doc) is also available online.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}